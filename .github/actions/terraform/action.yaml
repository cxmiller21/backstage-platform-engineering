name: 'Deploy Terraform Resources'
description: 'Runs terraform validation and apply commands with workspaces'

inputs:
  environment:
    description: 'Environment to deploy to'
    required: true
  working_dir:
    description: 'Terraform working directory'
    required: true
  tf_vars:
    description: 'Terraform variables'
    required: false
  aws_access_key_id:
    description: 'AWS Access Key'
    required: true
  aws_secret_access_key:
    description: 'AWS Secret Access Key'
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - uses: hashicorp/setup-terraform@v2

    - name: Set Environment Variable
      id: tf-workspace-variable
      run: |
        echo "GITHUB_REF: ${{ github.ref }}"
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "Setting Terraform Environment to prod"
          echo "ENVIRONMENT=prod" >> $GITHUB_ENV
        else
          echo "Setting Terraform Environment to dev"
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ inputs.aws_access_key_id }}
        aws-secret-access-key: ${{ inputs.aws_secret_access_key }}
        aws-region: us-east-1

    - name: Terraform Format Validation
      id: fmt
      run: terraform fmt -check
      continue-on-error: false
      shell: bash
      working-directory: "${{ inputs.working_dir }}"

    - name: Terraform Setup
      id: init
      run: |
        terraform init
        terraform workspace list
        echo "Setting Terraform Workspace to: ${{ env.ENVIRONMENT }}"
        terraform workspace select --or-create=true ${{ env.ENVIRONMENT }}
      shell: bash
      working-directory: "${{ inputs.working_dir }}"

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      shell: bash
      working-directory: "${{ inputs.working_dir }}"

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve ${{ inputs.tf_vars }}
      shell: bash
      working-directory: "${{ inputs.working_dir }}"
